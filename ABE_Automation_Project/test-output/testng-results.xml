<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-07T11:37:05 EET" name="Suite" finished-at="2023-08-07T11:38:27 EET" duration-ms="81774">
    <groups>
    </groups>
    <test started-at="2023-08-07T11:37:05 EET" name="PlayGroundTests Example 1" finished-at="2023-08-07T11:38:27 EET" duration-ms="81774">
      <class name="tests.Playground01Test">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.Playground01Test@184cf7cf]" started-at="2023-08-07T11:37:06 EET" name="beforeTest" finished-at="2023-08-07T11:37:27 EET" duration-ms="21276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="test()[pri:0, instance:tests.Playground01Test@184cf7cf]" started-at="2023-08-07T11:37:27 EET" name="test" finished-at="2023-08-07T11:37:27 EET" duration-ms="297" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:97)
at utils.PageFunctionUtils.enterDataInWebElement(PageFunctionUtils.java:45)
at pageobjects.LoginPage.sendKeysUserNameTextfield(LoginPage.java:18)
at procedures.LoginProcedures.login(LoginProcedures.java:12)
at tests.Playground01Test.test(Playground01Test.java:25)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:835)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="after()[pri:0, instance:tests.Playground01Test@184cf7cf]" started-at="2023-08-07T11:37:27 EET" name="after" finished-at="2023-08-07T11:37:27 EET" duration-ms="191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- tests.Playground01Test -->
      <class name="tests.Playground03Test">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.Playground03Test@5bfa9431]" started-at="2023-08-07T11:37:06 EET" name="beforeTest" finished-at="2023-08-07T11:37:22 EET" duration-ms="16954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="test()[pri:0, instance:tests.Playground03Test@5bfa9431]" started-at="2023-08-07T11:37:22 EET" name="test" finished-at="2023-08-07T11:38:27 EET" duration-ms="64635" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="after()[pri:0, instance:tests.Playground03Test@5bfa9431]" started-at="2023-08-07T11:38:27 EET" name="after" finished-at="2023-08-07T11:38:27 EET" duration-ms="98" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- tests.Playground03Test -->
      <class name="tests.Playground02Test">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.Playground02Test@2fd6b6c7]" started-at="2023-08-07T11:37:06 EET" name="beforeTest" finished-at="2023-08-07T11:37:27 EET" duration-ms="21427" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="test()[pri:0, instance:tests.Playground02Test@2fd6b6c7]" started-at="2023-08-07T11:37:27 EET" name="test" finished-at="2023-08-07T11:38:05 EET" duration-ms="37638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="after()[pri:0, instance:tests.Playground02Test@2fd6b6c7]" started-at="2023-08-07T11:38:05 EET" name="after" finished-at="2023-08-07T11:38:05 EET" duration-ms="114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- tests.Playground02Test -->
      <class name="tests.Playground04Test">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.Playground04Test@5db250b4]" started-at="2023-08-07T11:37:06 EET" name="beforeTest" finished-at="2023-08-07T11:37:28 EET" duration-ms="22173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="test()[pri:0, instance:tests.Playground04Test@5db250b4]" started-at="2023-08-07T11:37:28 EET" name="test" finished-at="2023-08-07T11:38:05 EET" duration-ms="37197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="after()[pri:0, instance:tests.Playground04Test@5db250b4]" started-at="2023-08-07T11:38:05 EET" name="after" finished-at="2023-08-07T11:38:05 EET" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- tests.Playground04Test -->
      <class name="tests.Playground05Test">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:tests.Playground05Test@223f3642]" started-at="2023-08-07T11:37:06 EET" name="beforeTest" finished-at="2023-08-07T11:37:27 EET" duration-ms="21201" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method signature="test()[pri:0, instance:tests.Playground05Test@223f3642]" started-at="2023-08-07T11:37:27 EET" name="test" finished-at="2023-08-07T11:38:08 EET" duration-ms="41615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="after()[pri:0, instance:tests.Playground05Test@223f3642]" started-at="2023-08-07T11:38:08 EET" name="after" finished-at="2023-08-07T11:38:08 EET" duration-ms="138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- tests.Playground05Test -->
    </test> <!-- PlayGroundTests Example 1 -->
  </suite> <!-- Suite -->
</testng-results>
